name: e2e-bons-comptes-bons-amis
on:
  push:
    paths:
      - .github/workflows/e2e-bons-comptes-bons-amis.yaml
      - apps/bons-comptes-bons-amis/**
      - packages/layer-bons-comptes/**

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
permissions:
  contents: read # for checkout
jobs:
  e2e:
    environment: Preview â€“ bons-comptes-bons-amis
    runs-on: ubuntu-24.04
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
      SOLVER_URL: ${{ secrets.SOLVER_URL}}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 2
      - uses: pnpm/action-setup@41ff72655975bd51cab0327fa583b6e92b6d3061 # v4
        with:
          version: 10.18.2
      - name: Use Node.js 20
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5
        with:
          node-version: 22
          cache: 'pnpm'
      - name: Install Vercel CLI
        run: pnpm install --global vercel@latest
      - name: Install dependencies
        run: pnpm install --frozen-lockfile --ignore-scripts
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        id: vercel-deploy
        run: |
          vercel deploy --token=${{ secrets.VERCEL_TOKEN }} --archive=tgz > deployment-url.txt
          cat deployment-url.txt
          echo "PLAYWRIGHT_BASE_URL=$(cat deployment-url.txt)" >> $GITHUB_ENV
      - name: Install playwright browsers
        run: |
          pnpm exec playwright install
          pnpm exec playwright install-deps
      - run: pnpm test:e2e
        working-directory: ./apps/bons-comptes-bons-amis
