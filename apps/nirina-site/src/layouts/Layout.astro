---
import { Font } from 'astro:assets'
import { ClientRouter } from 'astro:transitions'
import '../styles/theme.css'
import RainbowRotatingBackground from './background/RainbowRotatingBackground.astro'
import NavigationHeader from './header/NavigationHeader.astro'
import MetaProperties from './MetaProperties.astro'

interface Props {
  title: string
  showNirinaRabesonInNavBar?: boolean
  animate?: boolean
  image?: string // TODO: fix this prop drilling
}

const { title, showNirinaRabesonInNavBar, animate, image } = Astro.props
---

<!doctype html>
<html lang="fr-FR" class="overflow-x-hidden">
  <head>
    <ClientRouter />

    <meta charset="utf-8" />

    <MetaProperties title={title} image={image} />
    <link
      rel="alternate"
      type="application/rss+xml"
      title="Site de Nirina Rabeson."
      href={new URL("rss.xml", Astro.site)}
    />
    <Font cssVariable="--dm-serif-text-font" preload />
    <Font cssVariable="--font-sans" preload />

    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="black" />
    <script>
      // On page load or when changing themes, best to add inline in `head` to avoid FOUC
      document.documentElement.classList.toggle(
        "dark",
        localStorage.theme === "dark" ||
          (!("theme" in localStorage) &&
            window.matchMedia("(prefers-color-scheme: dark)").matches)
      );
    </script>
    <script is:inline>
      // Theme colors for iOS Safari status bar
      const THEME_COLORS = {
        light: "#ffffff", // White background for light mode
        dark: "#0f172a", // Slate-900 background for dark mode
      };

      // Update meta theme-color tag for iOS Safari
      function updateThemeColor(isDark) {
        // Remove existing theme-color meta tags
        const existingMetas = document.querySelectorAll(
          'meta[name="theme-color"]'
        );
        existingMetas.forEach((meta) => meta.remove());

        // Create new theme-color meta tag
        const meta = document.createElement("meta");
        meta.name = "theme-color";
        meta.content = isDark ? THEME_COLORS.dark : THEME_COLORS.light;
        document.head.appendChild(meta);
      }

      // Make updateThemeColor globally accessible for ThemeToggle component
      window.updateThemeColor = updateThemeColor;

      // Handle theme persistence during Astro transitions
      function applyTheme() {
        const isDark =
          localStorage.theme === "dark" ||
          (!("theme" in localStorage) &&
            window.matchMedia("(prefers-color-scheme: dark)").matches);

        document.documentElement.classList.toggle("dark", isDark);
        updateThemeColor(isDark);
      }

      // Apply theme on initial load
      applyTheme();

      // Re-apply theme after Astro transitions
      document.addEventListener("astro:after-swap", applyTheme);

      // Listen for OS-level theme changes
      const mediaQuery = window.matchMedia("(prefers-color-scheme: dark)");
      function handleThemeChange() {
        // Only auto-update if user hasn't set a manual preference
        if (!("theme" in localStorage)) {
          applyTheme();
        }
      }

      // Add listener for theme changes
      mediaQuery.addListener(handleThemeChange);
      // Also support modern syntax
      if (mediaQuery.addEventListener) {
        mediaQuery.addEventListener("change", handleThemeChange);
      }
    </script></head
  >

  <body class="relative overflow-x-hidden">
    <RainbowRotatingBackground />

    <div>
      <div class="antialiased">
        <div class="max-w-3xl mx-auto px-4 sm:px-6 xl:max-w-5xl xl:px-0">
          <NavigationHeader animate={animate}>
            âœ¨
            {
              !showNirinaRabesonInNavBar && (
                <h3 class="inline statement-font rainbow-animation">
                  Nirina Rabeson
                </h3>
              )
            }</NavigationHeader
          >
        </div>
        <main class="max-w-4xl mx-auto px-4 sm:px-6 xl:px-0 mb-20">
          <slot />
        </main>
      </div>
    </div>
    <a class="hidden" rel="me" href="https://hachyderm.io/@nirina">Mastodon</a>
  </body>
</html>
