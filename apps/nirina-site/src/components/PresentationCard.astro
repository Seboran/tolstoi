---
import { getEntry, render } from 'astro:content'

interface Props {
  id: string
  isLast?: boolean
}

const { id, isLast = false } = Astro.props
const entry = await getEntry('presentations', id)

if (!entry) {
  throw new Error(`Could not find presentation with ID: ${id}`)
}
const { title, url } = entry.data

const { Content } = await render(entry)
---

<article class={isLast ? "pb-8" : "border-b border-gray-200 pb-8"}>
  <h2 class="text-2xl font-semibold mb-4">
    {title}
  </h2>
  <Content />
  <a
    href={url}
    target="_blank"
    rel="noopener noreferrer"
    class="inline-flex items-center px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2"
    aria-label={`Regarder la prÃ©sentation sur YouTube : ${title}`}
  >
    <svg
      class="w-5 h-5 mr-2"
      fill="currentColor"
      viewBox="0 0 24 24"
      aria-hidden="true"
    >
      <path
        d="M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z"
      ></path>
    </svg>
    Voir sur YouTube
  </a>
</article>
