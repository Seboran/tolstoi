---
import { render } from 'astro:content'
import { Fragment } from 'astro/jsx-runtime'
import MarkdownPostLayout from '../../layouts/Layout.astro'
import { getSortedPublishedPosts } from '../../utils/getCollections'
import DatePublieLeV2 from '../blog/DatePublieLeV2.astro'
import LinkToOtherArticle from '../blog/LinkToOtherArticle.astro'
import TagsArticles from '../blog/TagsArticles.astro'
import DesignBigTitle from '../design/DesignBigTitle.astro'
import FormNewsletter from '../FormNewsletter.astro'
import Prose from '../Prose.astro'

const { entry, ogImage } = Astro.props
const { Content } = await render(entry)

const posts = await getSortedPublishedPosts()

const currentPostIndex = posts.findIndex((post) => post.id == Astro.params.slug)
const previousPost = currentPostIndex + 1 === posts.length ? undefined : posts[currentPostIndex + 1]
const nextPost = currentPostIndex === 0 ? undefined : posts[currentPostIndex - 1]

export const prerender = true
---

<MarkdownPostLayout title={entry.data.title + " | Nirina Rabeson"} image={ogImage}>
  <article>
    <header class="pt-6 space-y-1 text-center">
      <DatePublieLeV2 date={entry.data.date} />

      <DesignBigTitle>
        {entry.data.title}
      </DesignBigTitle>
      <div class="flex flex-row justify-center w-full">
        <TagsArticles tags={entry.data.tags} />
      </div>
    </header>

    <div
      class="divide-y divide-gray-200 dark:divide-slate-200/5 pb-16 xl:pb-20"
      style="grid-template-rows: auto 1fr"
    >
      <div class="divide-y divide-gray-200 dark:divide-slate-200/5 py-8">
        <Prose>
          <Content />
        </Prose>
      </div>

      <FormNewsletter />

      <footer
        class="flex flex-row w-full justify-between text-sm font-medium leading-5 divide-y divide-gray-200 dark:divide-slate-200/5"
      >
        {
          previousPost && (
            <LinkToOtherArticle class="py-8" nextPost={previousPost}>
              Article précédent
            </LinkToOtherArticle>
          )
        }
        {
          nextPost && (
            <LinkToOtherArticle class="py-8 text-right" nextPost={nextPost}>
              Article suivant
            </LinkToOtherArticle>
          )
        }
      </footer>

      <div class="pt-8">
        <a class="link" href="/blog">← Retour au blog</a>
      </div>
    </div>
  </article>
</MarkdownPostLayout>
